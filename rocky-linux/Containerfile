ARG BASE_IMAGE=cr.spk.no/docker-hub/rockylinux:9-minimal
FROM ${BASE_IMAGE}

# Magical variable that is set to amd64 for linux/amd64 platform and arm64 for linux/arm64 platform
ARG TARGETARCH
ARG OS_VERSION=9
ARG PACKAGE_MANAGER=microdnf
ARG PACKAGE_MANAGER_FLAGS="--assumeyes --nodocs --setopt=install_weak_deps=0"

ENV TZ=Europe/Oslo
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone

RUN ${PACKAGE_MANAGER} ${PACKAGE_MANAGER_FLAGS} update && \
    ${PACKAGE_MANAGER} ${PACKAGE_MANAGER_FLAGS} install \
    glibc-langpack-en && \
    ${PACKAGE_MANAGER} clean all && \
    rm -rf /var/cache/yum

# Fetch and install current and previous root certificate from yum server
ADD --chmod=644 https://raw.githubusercontent.com/statens-pensjonskasse/internal-ca-certificates/refs/heads/main/spk-root-ca-current.pem /etc/pki/ca-trust/source/anchors/
ADD --chmod=644 https://raw.githubusercontent.com/statens-pensjonskasse/internal-ca-certificates/refs/heads/main/spk-root-ca-previous.pem /etc/pki/ca-trust/source/anchors/
RUN update-ca-trust extract

# Remove mirrors and use baseurl (mostly for Rocky Linux) for repos, use https
RUN sed -i '/^mirrorlist/d' /etc/yum.repos.d/*.repo && \
    sed -i 's/^#baseurl/baseurl/' /etc/yum.repos.d/*.repo && \
    sed -i 's#http://#https://#g' /etc/yum.repos.d/*.repo

# Evaluate templates for internal Yum repositories
RUN --mount=type=bind,src=repos,dst=/tmp/repos \
    if [ "${TARGETARCH}" = "amd64" ]; then \
      ARCH=x86_64; \
    elif [ "${TARGETARCH}" = "arm64" ]; then \
      ARCH=aarch64 ; \
    else \
        echo "Error: Target architecture '${TARGETARCH}' is not supported" && \
        exit 1; \
    fi; \
    for REPO in /tmp/repos/*; do \
        eval "echo \"$(cat ${REPO})\"" > /etc/yum.repos.d/$(basename ${REPO} .tmpl); \
    done;

# Set locale
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

RUN adduser app

USER app
WORKDIR /home/app

ARG OS_VERSION=9
ARG OS_TYPE=-minimal
FROM rockylinux/rockylinux:${OS_VERSION}${OS_TYPE}

# Magical variable that is set to amd64 for linux/amd64 platform and arm64 for linux/arm64 platform
ARG OS_VERSION
ARG OS_TYPE
ARG TARGETARCH
ARG PACKAGE_MANAGER=microdnf
ARG PACKAGE_MANAGER_FLAGS="--assumeyes --nodocs --setopt=install_weak_deps=0"
ARG COMMON_PACKAGES="glibc-langpack-en shadow-utils"
ARG DISTRO_SPECIFIC_PACKAGES=""
ARG MICROSOFT_REPO_NAME='MS_Prod_EL'

ENV TZ=Europe/Oslo
RUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && \
    echo ${TZ} > /etc/timezone

# shadow-utils are needed for `useradd`, which is missing in 8-minimal (but not in 9-minimal)
RUN ${PACKAGE_MANAGER} ${PACKAGE_MANAGER_FLAGS} update && \
    ${PACKAGE_MANAGER} ${PACKAGE_MANAGER_FLAGS} install \
        ${COMMON_PACKAGES} \
        ${DISTRO_SPECIFIC_PACKAGES} && \
    ${PACKAGE_MANAGER} clean all && \
    rm -rf /var/cache/yum

# Fetch and install current and previous root certificate from yum server
ADD --chmod=644 https://raw.githubusercontent.com/statens-pensjonskasse/internal-ca-certificates/refs/heads/main/spk-root-ca-current.pem /etc/pki/ca-trust/source/anchors/
ADD --chmod=644 https://raw.githubusercontent.com/statens-pensjonskasse/internal-ca-certificates/refs/heads/main/spk-root-ca-previous.pem /etc/pki/ca-trust/source/anchors/
RUN update-ca-trust extract

# Install extra yum repositories - EPEL, Docker, Microsoft and Azul Zulu (java)
RUN ${PACKAGE_MANAGER} ${PACKAGE_MANAGER_FLAGS} install -y epel-release
RUN curl -sSL -o /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/rhel/docker-ce.repo
RUN curl -sSL -O https://packages.microsoft.com/config/rhel/${OS_VERSION}/packages-microsoft-prod.rpm \
    && rpm -ivh ./packages-microsoft-prod.rpm \
    && rm -f packages-microsoft-prod.rpm

# Evaluate templates for internal Yum repositories
RUN --mount=type=bind,src=repos,dst=/tmp/repos \
    if [ "${TARGETARCH}" = "amd64" ]; then \
        ARCH=x86_64; \
    elif [ "${TARGETARCH}" = "arm64" ]; then \
        ARCH=aarch64; \
    else \
        echo "Error: Target architecture '${TARGETARCH}' is not supported" && \
        exit 1; \
    fi; \
    for REPO in /tmp/repos/*; do \
        eval "echo \"$(cat ${REPO})\"" > /etc/yum.repos.d/$(basename ${REPO} .tmpl); \
    done;

# Disable internal Yum repositories so we can run install on cloud runners
RUN sed -i 's/^enabled=1/enabled=0/' /etc/yum.repos.d/spk*.repo

# Set locale
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

RUN adduser app

USER app
WORKDIR /home/app
